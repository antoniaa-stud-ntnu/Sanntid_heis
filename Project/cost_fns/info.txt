Required data
In order to assign a new request, we need the following information:

The unassigned request
The whereabouts of the elevators (floor, direction, state/behavior (ie. moving, doorOpen, idle))
The current set of existing requests (cab requests and hall requests)
The availability or failure modes of the elevators
From here we have two main ways of doing assignment: Assigning only a single new hall request, or re-assigning every hall request



Alternative 2: Reassigning all requests
For this alternative, all hall requests are reassigned whenever new data enters the system. This new data could be a new request, an updated state from some elevator, or an update on who is alive on the network. This redistribution means that a request is not necessarily assigned to the same elevator for the duration of its lifetime, but can instead be re-assigned to a new elevator, for example if a new idle elevator connects to the network, or the previously assigned elevator gets a lot of cab requests.

In order for this approach to work, it is necessary that either a) this distribution is uniquely calculated by some single elevator (some kind of master elevator), or b) all elevators that calculate the redistribution eventually come to the same conclusion - if the input data is not (eventually) consistent across the elevators, we can end up in a situation where a request is never served because all the elevators come to different conclusions that say "it is optimal that some other elevator is serving this request".

Unlike with Alternative 1, it is not recommended that you try to implement this code yourself - at least not without being inspired by (aka copying) existing code. This code is found here, and has already been compiled as a standalone executable which can be found in the releases tab.

If you are on linux (and osx?), you will likely have to give yourself permission to run the program after downloading it with chmod a+rwx hall_request_assigner